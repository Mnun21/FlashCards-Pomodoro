{"version":3,"sources":["utils/api/index.js","Layout/Display/Header.js","Layout/Errors/NotFound.js","Layout/Display/Buttons.js","Layout/Deck/DeckPreview.js","Layout/Deck/DeckList.js","Layout/Display/Links.js","Layout/FormContent/FormArea.js","Layout/FormContent/Form.js","Layout/Card/CardDisplay.js","Layout/Deck/DeckDisplay.js","Layout/Card/CardFunction.js","Layout/Errors/NotEnoughCards.js","utils/duration/index.js","pomodoro/Progress.js","pomodoro/Set.js","pomodoro/Play-Pause-Stop.js","utils/class-names/index.js","pomodoro/Pomodoro.js","utils/useInterval/index.js","Layout/Deck/Study.js","Layout/Deck/DeckRoutes.js","Layout/index.js","App.js","index.js"],"names":["API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","onCancel","a","fetch","response","status","Error","statusText","json","name","console","error","stack","Promise","resolve","listDecks","signal","createDeck","method","body","JSON","stringify","readDeck","deckId","updateDeck","updatedDeck","id","deleteDeck","createCard","card","Number","readCard","cardId","updateCard","updatedCard","deleteCard","append","Header","className","NotFound","Buttons","names","removeDeck","removeCard","buttonsJSX","push","href","type","onClick","propTypes","PropTypes","arrayOf","oneOf","isRequired","number","func","DeckPreview","length","description","DeckList","decks","decksJSX","map","Links","page","deckName","currentPage","FormArea","keys","idx","handleChange","formData","htmlFor","charAt","toUpperCase","slice","onChange","value","style","width","rows","Form","edit","addDeck","addCard","editDeck","editCard","abortController","history","useHistory","useParams","mode","initForm","useState","setDeck","setFormData","front","back","target","event","preventDefault","newItem","parseInt","useEffect","getDeck","abort","onSubmit","CardDisplay","DeckDisplay","Object","cardsJSX","CardFunction","cardNum","flipped","flip","next","NotEnoughCards","minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","secondsToDuration","givenSeconds","seconds","round","Progress","sessionType","isTimerRunning","timeRemaining","isSessionActive","focusDuration","breakDuration","percent","height","role","Set","setFocusDuration","setBreakDuration","marginTop","lastFocus","max","disabled","min","lastBreak","Control","classNameToBoolean","setIsSessionActive","setIsTimerRunning","setTimeRemaining","setSessionType","setMode","title","prevState","oi","entries","reduce","classes","concat","undefined","filter","join","Pomodoro","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","Audio","play","prevMode","currentTimeRemaining","Study","setCardNum","setFlipped","window","confirm","DeckRoutes","path","Layout","setDecks","AbortController","getDecks","created","edited","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d15d9a4e.chunk.js","sourcesContent":["/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  default value returned if the fetch is cancelled.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\n\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    return await response.json();\n\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options, updatedDeck);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all cards associated with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to a possible empty array of cards.\n */\nexport async function listCards(deckId, signal) {\n  const url = `${API_BASE_URL}/cards?deckId=${deckId}`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options, card);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options, updatedCard);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction Buttons({ names, deckId, cardId, removeDeck, removeCard }) {\r\n\tconst buttonsJSX = [];\r\n\tfor(let name of names) {\r\n\t\tswitch(name) {\r\n\t\t\tcase \"view\":\r\n\t\t\t\tbuttonsJSX.push(\r\n\t\t\t\t\t<a key=\"view\" href={`/decks/${deckId}`}>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary mr-2\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t&nbsp;View\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"study\":\r\n\t\t\t\tbuttonsJSX.push(\r\n\t\t\t\t\t<a key=\"study\" href={`/decks/${deckId}/study`}>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary mr-2\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t&nbsp;Study\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"delete-deck\":\r\n\t\t\t\tbuttonsJSX.push(\r\n\t\t\t\t\t<button key=\"delete\" type=\"button\" className=\"btn btn-danger float-right\" onClick={() => removeDeck(deckId)}>\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</button>\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"delete-card\":\r\n\t\t\t\tbuttonsJSX.push(\r\n\t\t\t\t\t<button key=\"delete\" type=\"button\" className=\"btn btn-danger float-right\" onClick={() => removeCard(cardId)}>\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\r\n\t\t\t\t\t</button>\r\n\t\t\t\t);\r\n\t\t\t\tbreak; \r\n\r\n\t\t\tcase \"edit-deck\":\r\n\t\t\t\tbuttonsJSX.push(\r\n\t\t\t\t\t<a key=\"edit-deck\" href={`/decks/${deckId}/edit`}>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary mr-2\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t&nbsp;Edit\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"edit-card\":\r\n\t\t\t\tbuttonsJSX.push(\r\n\t\t\t\t\t<a key=\"edit-card\" href={`/decks/${deckId}/cards/${cardId}/edit`}>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary mr-2 float-right\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t&nbsp;Edit\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"add-card\":\r\n\t\t\t\tbuttonsJSX.push(\r\n\t\t\t\t\t<a key=\"add-card\" href={`/decks/${deckId}/cards/new`}>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary mr-2\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tAdd Cards\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"add-deck\":\r\n\t\t\t\tbuttonsJSX.push(\r\n\t\t\t\t\t<a key=\"add-deck\" href=\"/decks/new\">\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary mr-2\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tCreate Deck\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault: return null;\r\n\t\t}\r\n\t}\r\n\r\n\treturn buttonsJSX;\r\n}\r\n\r\nButtons.propTypes = {\r\n\tnames: PropTypes.arrayOf(PropTypes.oneOf(\r\n\t\t[\"view\", \"study\", \"delete-deck\", \"delete-card\", \"edit-deck\", \"edit-card\", \"add-deck\", \"add-card\"]\r\n\t)).isRequired, \r\n\tdeckId: PropTypes.number, \r\n\tcardId: PropTypes.number, \r\n\tremoveDeck: PropTypes.func, \r\n\tremoveCard: PropTypes.func,\r\n};\r\n\r\nexport default Buttons;","import React from \"react\";\r\nimport Buttons from \"../Display/Buttons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction DeckPreview({ deck, removeDeck }) {\r\n\treturn (\r\n\t\t<div className=\"card mt-2\" id={`deck-${deck.id}`}>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<p className=\"card-subtitle mb-2 text-muted float-right\">{deck.cards.length} cards</p>\r\n\t\t\t\t<h4 className=\"card-title\">{deck.name}</h4>\r\n\t\t\t\t<p className=\"card-text\">{deck.description}</p>\r\n\t\t\t\t<Buttons names={[\"view\", \"study\", \"delete-deck\"]} deckId={deck.id} removeDeck={removeDeck} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nDeckPreview.propTypes = {\r\n\tdeck: PropTypes.shape({\r\n\t\t\"name\": PropTypes.string.isRequired,\r\n\t\t\"description\": PropTypes.string.isRequired,\r\n\t\t\"id\": PropTypes.number.isRequired,\r\n\t}).isRequired,\r\n\tremoveDeck: PropTypes.func.isRequired, \r\n};\r\n\r\nexport default DeckPreview;","import React from \"react\";\r\nimport DeckPreview from \"./DeckPreview\";\r\nimport Buttons from \"../Display/Buttons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction DeckList({ decks, removeDeck }) {\r\n\tconst decksJSX = decks.map((deck) => <DeckPreview key={deck.id} deck={deck} removeDeck={removeDeck} />);\r\n\r\n\treturn (\r\n\t\t<div id=\"deck-list\">\r\n\t\t\t<Buttons names={[\"add-deck\"]} />\r\n\t\t\t{decksJSX}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nDeckList.propTypes = {\r\n\tdecks: PropTypes.arrayOf(PropTypes.shape({\r\n\t\t\"name\": PropTypes.string.isRequired,\r\n\t\t\"description\": PropTypes.string.isRequired,\r\n\t\t\"id\": PropTypes.number.isRequired,\r\n\t}).isRequired).isRequired, \r\n\tremoveDeck: PropTypes.func.isRequired, \r\n};\r\n\r\nexport default DeckList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Links({ page, deckName, deckId, cardId }) {\r\n\t\r\n\tconst currentPage = () => {\r\n\t\tswitch(page) {\r\n\t\t\tcase \"study\":\r\n\t\t\t\treturn <li className=\"breadcrumb-item active\">Study</li>;\r\n\t\t\tcase \"create-deck\":\r\n\t\t\t\treturn <li className=\"breadcrumb-item active\">Create Deck</li>;\r\n\t\t\tcase \"edit-deck\":\r\n\t\t\t\treturn <li className=\"breadcrumb-item active\">Edit Deck</li>;\r\n\t\t\tcase \"create-card\":\r\n\t\t\t\treturn <li className=\"breadcrumb-item active\">Add Card</li>;\r\n\t\t\tcase \"edit-card\":\r\n\t\t\t\treturn <li className=\"breadcrumb-item active\">Edit Card {cardId}</li>;\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst deckTitle = () => {\r\n\t\tif(!deckName || !deckId) return null;\r\n\r\n\t\treturn (\r\n\t\t\t<li className={`breadcrumb-item ${page === \"view\" ? \"active\" : \"\"}`}>\r\n\t\t\t\t{page === \"view\" ? deckName :\r\n\t\t\t\t\t<a href={`/decks/${deckId}`}>\r\n\t\t\t\t\t\t{deckName}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t}\r\n\t\t\t</li>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id=\"deck-study\">\r\n\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<a href=\"/\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t{deckTitle()}\r\n\t\t\t\t\t{currentPage()}\r\n\t\t\t\t</ol>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nLinks.propTypes = {\r\n\tpage: PropTypes.string.isRequired,\r\n\tdeckName: PropTypes.string,\r\n\tdeckId: PropTypes.number,\r\n\tcardId: PropTypes.number,\r\n};\r\n\r\nexport default Links;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction FormArea({ keys, idx, handleChange, formData }) {\r\n\treturn (\r\n\t\t<div id={keys[idx]}>\r\n\t\t\t<label htmlFor={keys[idx]}>\r\n\t\t\t\t{keys[idx].charAt(0).toUpperCase() + keys[idx].slice(1)}\r\n\t\t\t</label>\r\n\r\n\t\t\t<br />\r\n\r\n\t\t{keys[idx] === \"name\" ?\r\n\t\t\t<input\r\n\t\t\t\tname=\"name\"\r\n\t\t\t\tid=\"name\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tvalue={formData[keys[idx]]}\r\n\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t/> :\r\n\t\t\t<textarea\r\n\t\t\t\tname={keys[idx]}\r\n\t\t\t\tid={keys[idx]}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tvalue={formData[keys[idx]]}\r\n\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\trows=\"4\"\r\n\t\t\t/>\r\n\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nFormArea.propTypes = {\r\n\tkeys: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n\tidx: PropTypes.number.isRequired,\r\n\thandleChange: PropTypes.func.isRequired,\r\n\tformData: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FormArea;","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router\";\r\nimport { readDeck, readCard } from \"../../utils/api/index\";\r\nimport Links from \"../Display/Links\";\r\nimport FormArea from \"./FormArea\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Form({ type, edit, addDeck, addCard, editDeck, editCard, abortController }) {\r\n\tconst history = useHistory();\r\n\tlet { deckId, cardId } = useParams();\r\n\tconst mode = edit ? \"edit\" : \"create\";\r\n\tconst keys = type === \"deck\" ? [\"name\", \"description\"] : [\"front\", \"back\"];\r\n\r\n\tconst initForm = {\r\n\t\t[keys[0]]: \"\",\r\n\t\t[keys[1]]: \"\",\r\n\t};\r\n\r\n\tconst [deck, setDeck] = useState({});\r\n\tconst [formData, setFormData] = useState({...initForm});\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDeck();\r\n\r\n\t\treturn () => {\r\n\t\t\tabortController.abort();\r\n\t\t};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\tasync function getDeck() {\r\n\t\tif(type === \"deck\" && !edit) return;\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await readDeck(deckId, abortController.signal);\r\n\t\t\tsetDeck(response);\r\n\r\n\t\t\r\n\t\t\tif(edit) {\r\n\t\t\t\tif(response && type === \"deck\") {\r\n\t\t\t\t\tinitForm[keys[0]] = response.name;\r\n\t\t\t\t\tinitForm[keys[1]] = response.description;\r\n\t\t\t\t}\r\n\t\t\t\telse if(type === \"card\") {\r\n\t\t\t\t\tconst card = await readCard(cardId, abortController.signal);\r\n\t\t\t\t\tif(card) {\r\n\t\t\t\t\t\tinitForm[keys[0]] = card.front;\r\n\t\t\t\t\t\tinitForm[keys[1]] = card.back;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsetFormData({...initForm});\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tif(error.name !== \"AbortError\") {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction handleChange({ target }) {\r\n\t\tsetFormData({...formData, [target.name]: target.value});\r\n\t}\r\n\r\n\t\r\n\tasync function handleSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tlet newItem = {\r\n\t\t\t[keys[0]]: formData[keys[0]],\r\n\t\t\t[keys[1]]: formData[keys[1]],\r\n\t\t};\r\n\r\n\t\tif(edit) {\r\n\t\t\tnewItem[\"id\"] = type === \"deck\" ? parseInt(deckId) : parseInt(cardId);\r\n\r\n\t\t\tif(type === \"card\") {\r\n\t\t\t\tnewItem[\"deckId\"] = parseInt(deckId);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tconst idx = edit ?\r\n\t\t\t(type === \"deck\" ? await editDeck(newItem) : await editCard(newItem)) :\r\n\t\t\t(type === \"deck\" ? await addDeck(newItem) : await addCard(newItem, deckId));\r\n\r\n\t\t\r\n\t\tif(!edit && type === \"deck\") {\r\n\t\t\tdeckId = idx;\r\n\t\t}\r\n\r\n\t\thistory.push(`/decks/${deckId}`);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id={`${type}-form-${mode}`}>\r\n\t\t\t<Links\r\n\t\t\t\tpage={`${mode}-${type}`} \r\n\t\t\t\tdeckName={deck ? deck.name : null} \r\n\t\t\t\tdeckId={parseInt(deckId)} \r\n\t\t\t\tcardId={cardId ? parseInt(cardId) : null}\r\n\t\t\t/>\r\n\r\n\t\t\t<h1>\r\n\t\t\t\t{type === \"card\" && `${deck.name}: `}\r\n\t\t\t\t{mode.charAt(0).toUpperCase() + mode.slice(1)}&nbsp;\r\n\t\t\t\t{type.charAt(0).toUpperCase() + type.slice(1)}&nbsp;\r\n\t\t\t</h1>\r\n\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<FormArea\r\n\t\t\t\t\tkeys={keys}\r\n\t\t\t\t\tidx={0}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\tformData={formData}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<FormArea\r\n\t\t\t\t\tkeys={keys}\r\n\t\t\t\t\tidx={1}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\tformData={formData}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<a href=\"/\">\r\n\t\t\t\t\t<button className=\"btn btn-secondary mr-1\" type=\"button\">Cancel</button>\r\n\t\t\t\t</a>\r\n\r\n\t\t\t\t<button className=\"btn btn-primary mr-1\" type=\"submit\">Submit</button>\r\n\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nForm.propTypes = {\r\n\ttype: PropTypes.oneOf([\"deck\", \"card\"]).isRequired, \r\n\tedit: PropTypes.bool.isRequired, \r\n\taddDeck: PropTypes.func,\r\n\taddCard: PropTypes.func, \r\n\teditDeck: PropTypes.func, \r\n\teditCard: PropTypes.func,\r\n\tabortController: PropTypes.instanceOf(AbortController).isRequired\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\nimport Buttons from \"../Display/Buttons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction CardDisplay({ card, removeCard }) {\r\n\treturn (\r\n\t\t<ul className=\"list-group\">\r\n\t\t\t<li className=\"list-group-item\">{card.front}</li>\r\n\t\t\t<li className=\"list-group-item\">{card.back}</li>\r\n\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t<Buttons names={[\"delete-card\", \"edit-card\"]} removeCard={removeCard} deckId={card.deckId} cardId={card.id}/>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n}\r\n\r\nCardDisplay.propTypes = {\r\n\tcard: PropTypes.shape({\r\n\t\t\"front\": PropTypes.string.isRequired,\r\n    \"back\": PropTypes.string.isRequired,\r\n    \"deckId\": PropTypes.number.isRequired,\r\n    \"id\": PropTypes.number.isRequired,\r\n\t}).isRequired,\r\n\tremoveCard: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CardDisplay;","import React, { useState, useEffect } from \"react\";\r\nimport { readDeck } from \"../../utils/api/index\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Links from \"../Display/Links\";\r\nimport Buttons from \"../Display/Buttons\";\r\nimport CardDisplay from \"../Card/CardDisplay\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction DeckDisplay({ removeDeck, removeCard, abortController }) {\r\n\tconst [deck, setDeck] = useState({});\r\n\tconst { deckId } = useParams();\r\n\r\n\t// get deck \r\n\tuseEffect(() => {\r\n\t\tgetDeck();\r\n\r\n\t\treturn () => {\r\n\t\t\tabortController.abort();\r\n\t\t};\r\n\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\t\r\n\tasync function getDeck() {\r\n\t\ttry {\r\n\t\t\tconst response = await readDeck(deckId, abortController.signal);\r\n\t\t\tsetDeck(response);\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tif(error.name !== \"AbortError\") {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif(Object.keys(deck).length === 0) return null;\r\n\r\n\tconst cardsJSX = deck.cards.map((card) => <CardDisplay key={card.id} card={card} removeCard={removeCard} />);\r\n\r\n\treturn (\r\n\t\t<div id={`deck-${deck.id}-view`}>\r\n\t\t\t<Links deckName={deck.name} deckId={deck.id} page=\"view\" />\r\n\t\t\t<h5>{deck.name}</h5>\r\n\t\t\t<p>{deck.description}</p>\r\n\r\n\t\t\t<Buttons names={[\"edit-deck\", \"study\", \"add-card\", \"delete-deck\"]} deckId={deck.id} removeDeck={removeDeck} />\r\n\r\n\t\t\t<h3 className=\"mt-4\">Cards</h3>\r\n\t\t\t{cardsJSX}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nDeckDisplay.propTypes = {\r\n\tremoveDeck: PropTypes.func, \r\n\tremoveCard: PropTypes.func,\r\n\tabortController: PropTypes.instanceOf(AbortController).isRequired,\r\n};\r\n\r\nexport default DeckDisplay;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction CardFunction({ deck, cardNum, flipped, flip, next }) {\r\n\treturn (\r\n\t\t<div className=\"card mt-2\" id={`card-${deck.id}`}>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<h4 className=\"card-title\">Card {cardNum + 1} of {deck.cards.length}</h4>\r\n\t\t\t\t<p className=\"card-text\">{deck.cards[cardNum][flipped ? \"back\" : \"front\"]}</p>\r\n\t\t\t\t<button type=\"button\" className=\"btn btn-secondary mr-2\" onClick={flip}>\r\n\t\t\t\t\tFlip\r\n\t\t\t\t</button>\r\n\t\t\t\t{flipped &&\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary mr-2\" onClick={next}>\r\n\t\t\t\t\t\tNext\r\n\t\t\t\t\t</button>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nCardFunction.propTypes = {\r\n\tdeck: PropTypes.shape({\r\n\t\t\"name\": PropTypes.string.isRequired,\r\n\t\t\"description\": PropTypes.string.isRequired,\r\n\t\t\"id\": PropTypes.number.isRequired,\r\n\t}),\r\n\tcardNum: PropTypes.number.isRequired,\r\n\tflipped: PropTypes.bool.isRequired,\r\n\tflip: PropTypes.func.isRequired,\r\n\tnext: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CardFunction;","import React from \"react\";\r\nimport Buttons from \"../Display/Buttons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction NotEnoughCards({ length, id }) {\r\n\treturn (\r\n\t\t<div id=\"card-error\">\r\n\t\t\t<h3>Not enough cards.</h3>\r\n\t\t\t<p>You need at least 3 cards to study. There are {length} cards in this deck.</p>\r\n\r\n\t\t\t<Buttons names={[\"add-card\"]} deckId={id} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nNotEnoughCards.propTypes = {\r\n\tlength: PropTypes.number.isRequired,\r\n\tid: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default NotEnoughCards;","/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\n/*\n\nContains Progress Bar \n\n*/\n\nfunction Progress({\n  mode: sessionType,\n  isTimerRunning,\n  timeRemaining,\n  isSessionActive,\n  focusDuration,\n  breakDuration,\n}) {\n  let currentDuration = sessionType === \"focus\" ? focusDuration : breakDuration;\n  let percent = (1 - timeRemaining / (currentDuration * 60)) * 100;\n\n  if (!isSessionActive) {\n    return null;\n  }\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2 data-testid=\"session-title\">\n            {sessionType === \"focus\"\n              ? `Focusing for ${minutesToDuration(focusDuration)} minutes`\n              : `On Break for ${minutesToDuration(breakDuration)} minutes`}\n          </h2>\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n            {secondsToDuration(timeRemaining)} remaining\n          </p>\n          <h3>{!isTimerRunning && isSessionActive ? \"PAUSED\" : null}</h3>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"progress\" style={{ height: \"15px\" }}>\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              aria-valuenow={percent} \n              style={{ width: `${percent}%` }} \n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Progress;\n","import React from \"react\";\r\nimport { minutesToDuration } from \"../utils/duration\";\r\n\r\n/*\r\n\r\nContains the the buttons to change the focus and break times\r\n\r\n*/\r\n\r\nfunction Set ( {\r\n  setFocusDuration,\r\n  isSessionActive,\r\n  isTimerRunning,\r\n  focusDuration,\r\n  breakDuration,\r\n  setBreakDuration,\r\n  }) {\r\nconst decreaseFocus = () => {\r\n    setFocusDuration((lastFocus) => Math.max(5, lastFocus - 5)); \r\n  };\r\n\r\n  const increaseFocus = () => {\r\n    setFocusDuration((lastFocus) => Math.min(60, lastFocus + 5)); \r\n  };\r\n  const decreaseBreak = () => {\r\n    setBreakDuration((lastBreak) => Math.max(1, lastBreak - 1));\r\n  };\r\n\r\n  const increaseBreak = () => {\r\n    setBreakDuration((lastBreak) => Math.min(15, lastBreak + 1));\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"row\">\r\n<div className=\"col\">\r\n          <div className=\"input-group input-group-lg mb-2\">\r\n            <span className=\"input-group-text\" data-testid=\"duration-focus\" style={{marginTop: \"5px\"}}>\r\n              Focus Duration: {minutesToDuration(focusDuration)}\r\n            </span>\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"decrease-focus\"\r\n                onClick={decreaseFocus}\r\n                disabled={isSessionActive || isTimerRunning ? true : false} \r\n              >\r\n                <span className=\"oi oi-minus\" />\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"increase-focus\"\r\n                onClick={increaseFocus}\r\n                disabled={isSessionActive || isTimerRunning ? true : false}\r\n              >\r\n                <span className=\"oi oi-plus\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n         <div className=\"col\">\r\n         <div className=\"float-right\">\r\n           <div className=\"input-group input-group-lg mb-2\">\r\n             <span className=\"input-group-text\" data-testid=\"duration-break\">\r\n               Break Duration: {minutesToDuration(breakDuration)}\r\n             </span>\r\n             <div className=\"input-group-append\">\r\n               <button\r\n                 type=\"button\"\r\n                 className=\"btn btn-secondary\"\r\n                 data-testid=\"decrease-break\"\r\n                 onClick={decreaseBreak}\r\n                 disabled={isSessionActive || isTimerRunning ? true : false}\r\n               >\r\n                 <span className=\"oi oi-minus\" />\r\n               </button>\r\n               <button\r\n                 type=\"button\"\r\n                 className=\"btn btn-secondary\"\r\n                 data-testid=\"increase-break\"\r\n                 onClick={increaseBreak}\r\n                 disabled={isSessionActive || isTimerRunning ? true : false}\r\n               >\r\n                 <span className=\"oi oi-plus\" />\r\n               </button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       </div>\r\n  )\r\n}\r\n\r\nexport default Set;","import React from \"react\";\r\nimport classNames from \"../utils/class-names\";\r\n  \r\n/*\r\n\r\nContains the Play/Pause and Stop buttons\r\nthat affects when the progress bar is displayed\r\n\r\n*/\r\n\r\n\r\nfunction Control ({ \r\nsetIsSessionActive,\r\nsetIsTimerRunning,\r\nsetTimeRemaining,\r\nsetMode: setSessionType,\r\nisSessionActive,\r\nfocusDuration,\r\nisTimerRunning,\r\n}) {\r\n\r\nconst playPause = () => {\r\n    if (!isSessionActive) {\r\n      setIsSessionActive(true);\r\n      setTimeRemaining(focusDuration * 60); \r\n    }\r\n    setIsTimerRunning((prevState) => !prevState);\r\n  }\r\n   const stopTimer = () => {\r\n    setIsSessionActive(false);\r\n    setIsTimerRunning(false);\r\n    setSessionType(\"focus\");\r\n  };\r\nreturn (\r\n  <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div\r\n            className=\"btn-group btn-group-lg\"\r\n            role=\"group\"\r\n            aria-label=\"Timer controls\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              data-testid=\"play-pause\"\r\n              title=\"Start or pause timer\"\r\n              onClick={playPause}\r\n            >\r\n              <span\r\n                className={classNames({\r\n                  oi: true,\r\n                  \"oi-media-play\": !isTimerRunning,\r\n                  \"oi-media-pause\": isTimerRunning,\r\n                })}\r\n              />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-testid=\"stop\"\r\n              title=\"Stop the session\"\r\n              onClick={stopTimer}\r\n              disabled={!isSessionActive}\r\n            >\r\n              <span className=\"oi oi-media-stop\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n  )\r\n }\r\n\r\n export default Control;","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport Progress from \"./Progress\";\nimport Set from \"./Set\";\nimport Control from \"./Play-Pause-Stop\";\n\n\nfunction Pomodoro() {\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [sessionType, setSessionType] = useState(\"focus\");\n  const [isSessionActive, setIsSessionActive] = useState(false);\n\n  useInterval(\n    () => {\n      if (timeRemaining === 0) {\n        new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n        const duration = sessionType === \"focus\" ? breakDuration : focusDuration; \n        setTimeRemaining(duration * 60); \n        setSessionType((prevMode) => (prevMode === \"focus\" ? \"break\" : \"focus\"));\n        return;\n      }\n      setTimeRemaining((currentTimeRemaining) => currentTimeRemaining - 1);\n    },\n    isTimerRunning ? 1000 : null\n  );  \n\n  return (\n\n    \n    <div className=\"pomodoro\">\n\n        <Set \n       setFocusDuration={setFocusDuration}\n       focusDuration={focusDuration}\n       isSessionActive={isSessionActive}\n       isTimerRunning={isTimerRunning}\n       breakDuration={breakDuration}\n        setBreakDuration={setBreakDuration}\n        />\n     <Control\n       setIsSessionActive={setIsSessionActive}\n       setTimeRemaining={setTimeRemaining}\n       setIsTimerRunning={setIsTimerRunning}\n       setMode={setSessionType}\n       isSessionActive={isSessionActive}\n       focusDuration={focusDuration}\n       isTimerRunning={isTimerRunning}\n     />\n\n      <Progress\n        mode={sessionType}\n        isTimerRunning={isTimerRunning}\n        timeRemaining={timeRemaining}\n        isSessionActive={isSessionActive}\n        focusDuration={focusDuration}\n        breakDuration={breakDuration}\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { readDeck } from \"../../utils/api/index\";\r\nimport Links from \"../Display/Links\";\r\nimport CardFunction from \"../Card/CardFunction\";\r\nimport NotEnoughCards from \"../Errors/NotEnoughCards\";\r\nimport PropTypes from \"prop-types\";\r\nimport Pomodoro from \"../../pomodoro/Pomodoro\";\r\n\r\nfunction Study({ abortController }) {\r\n\tconst [cardNum, setCardNum] = useState(0);\r\n\tconst [flipped, setFlipped] = useState(false);\r\n\tconst history = useHistory();\r\n\tconst [deck, setDeck] = useState({});\r\n\tconst { deckId } = useParams();\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDeck();\r\n\r\n\t\treturn () => {\r\n\t\t\tabortController.abort();\r\n\t\t};\r\n\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\t\r\n\t\r\n\tasync function getDeck() {\r\n\t\ttry {\r\n\t\t\tconst response = await readDeck(deckId, abortController.signal);\r\n\t\t\tsetDeck(response);\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tif(error.name !== \"AbortError\") {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif(Object.keys(deck).length === 0) return null;\r\n\r\n\tif(!deck) return null;\r\n\r\n\t\r\n\t // Flips the current card.\r\n\t \r\n\tfunction flip() {\r\n\t\tsetFlipped(!flipped);\r\n\t}\r\n\r\n\r\n\tfunction next() {\r\n\t\tif(cardNum + 1 === deck.cards.length) {\r\n\t\t\tif(window.confirm(`Restart cards?\\n\\nClick 'cancel' to return to the home page.`)) {\r\n\t\t\t\tsetCardNum(0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thistory.push(\"/\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetCardNum(cardNum + 1);\r\n\t\t}\r\n\t\tsetFlipped(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t<div id={`deck-${deck.id}-study`}>\r\n\t\t\t<Links deckName={deck.name} deckId={deck.id} page=\"study\" />\r\n\t\t\t<h1>Study: {deck.name}</h1>\r\n\r\n\t\t\t{deck.cards.length > 2 ?\r\n\t\t\t\t<CardFunction\r\n\t\t\t\t\tkey={deck.cards[cardNum].id} \r\n\t\t\t\t\tdeck={deck} \r\n\t\t\t\t\tcardNum={cardNum} \r\n\t\t\t\t\tflipped={flipped} \r\n\t\t\t\t\tflip={flip}\r\n\t\t\t\t\tnext={next}\r\n\t\t\t\t/> :\r\n\t\t\t\t<NotEnoughCards length={deck.cards.length} id={deck.id} />}\r\n\t\t</div>\r\n\r\n\t\t<h3>\r\n\t\t\tTimer\r\n\t\t</h3>\r\n\t\t\t<Pomodoro />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nStudy.propTypes = {\r\n\tabortController: PropTypes.instanceOf(AbortController).isRequired,\r\n};\r\n\r\nexport default Study;","import React from \"react\";\r\nimport { Switch, Route, useParams } from \"react-router-dom\";\r\nimport Form from \"../FormContent/Form\";\r\nimport DeckDisplay from \"./DeckDisplay\";\r\nimport Study from \"./Study\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction DeckRoutes ({ editDeck, removeDeck, addCard, editCard, removeCard, abortController }) {\r\n\tconst { deckId } = useParams();\r\n\r\n\t\r\n\treturn (\r\n\t\t<div id={`deck-${deckId}`}>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/decks/:deckId/study\">\r\n\t\t\t\t\t<Study abortController={abortController} />\r\n\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/decks/:deckId/edit\">\r\n\t\t\t\t\t<Form type=\"deck\" edit={true} editDeck={editDeck} abortController={abortController} />\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/decks/:deckId/cards/new\">\r\n\t\t\t\t\t<Form type=\"card\" edit={false} addCard={addCard} abortController={abortController} />\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/decks/:deckId/cards/:cardId/edit\">\r\n\t\t\t\t\t<Form type=\"card\" edit={true} editCard={editCard} abortController={abortController} />\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/decks/:deckId\">\r\n\t\t\t\t\t<DeckDisplay removeDeck={removeDeck} removeCard={removeCard} abortController={abortController} />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nDeckRoutes.propTypes = {\r\n\teditDeck: PropTypes.func.isRequired,\r\n\tremoveDeck: PropTypes.func.isRequired, \r\n\taddCard: PropTypes.func.isRequired, \r\n\teditCard: PropTypes.func.isRequired, \r\n\tremoveCard: PropTypes.func.isRequired,\r\n\tabortController: PropTypes.instanceOf(AbortController).isRequired,\r\n};\r\n\r\nexport default DeckRoutes;","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport { listDecks, deleteDeck, createDeck, deleteCard, updateDeck, createCard, updateCard } from \"../utils/api/index\";\nimport Header from \"./Display/Header\";\nimport NotFound from \"./Errors/NotFound\";\nimport DeckList from \"./Deck/DeckList\";\nimport DeckRoutes from \"./Deck/DeckRoutes\";\nimport Form from \"./FormContent/Form\";\n\n\nfunction Layout() {\n\tconst [decks, setDecks] = useState([]);\n\tconst abortController = new AbortController();\n\tconst signal = abortController.signal;\n\tconst history = useHistory();\n\n\n\tuseEffect(() => {\n\t\tgetDecks();\n\n\t\treturn () => {\n\t\t\tabortController.abort();\n\t\t};\n    \n// eslint-disable-next-line\n\t}, []);\n\n\n  \n\n\tasync function getDecks() {\n\t\ttry {\n\t\t\tconst response = await listDecks(signal);\n\t\t\tsetDecks(response);\n\t\t}\n\t\tcatch(error) {\n\t\t\tif(error.name !== \"AbortError\") {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tasync function addDeck(deck) {\n\t\tconst created = await createDeck(deck, signal);\n\t\tgetDecks();\n\t\treturn created.id;\n\t}\n\n\t\n\tasync function addCard(card, id) {\n\t\tconst created = await createCard(id, card, signal);\n\t\tgetDecks();\n\t\treturn created.id;\n\t}\n\n\n\tasync function editDeck(deck) {\n\t\tconst edited = await updateDeck(deck, signal);\n\t\tgetDecks();\n\t\treturn edited.id;\n\t}\n\n\t\n\tasync function editCard(card) {\n\t\tconst edited = await updateCard(card, signal);\n\t\tgetDecks();\n\t\treturn edited.id;\n\t}\n\n\t\n\tasync function removeDeck(id) {\n\t\tif(window.confirm(`Delete this deck?\\n\\nYou will not be able to recover it.`)) {\n\t\t\tawait deleteDeck(id, signal);\n\t\t\tgetDecks();\n\t\t\thistory.push(\"/\");\n\t\t}\n\t}\n\n\n\tasync function removeCard(id) {\n\t\tif(window.confirm(`Delete this card?\\n\\nYou will not be able to recover it.`)) {\n\t\t\tawait deleteCard(id, signal);\n\t\t\tgetDecks();\n\t\t}\n\t}\n\n  return (\n    <Fragment>\n      <Header />\n      <div className=\"container\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<DeckList decks={decks} removeDeck={removeDeck} />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path=\"/decks/new\">\n\t\t\t\t\t\t<Form type=\"deck\" edit={false} addDeck={addDeck} abortController={abortController} />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path=\"/decks/:deckId/\">\n\t\t\t\t\t\t<DeckRoutes\n\t\t\t\t\t\t\teditDeck={editDeck} \n\t\t\t\t\t\t\tremoveDeck={removeDeck} \n\t\t\t\t\t\t\taddCard={addCard} \n\t\t\t\t\t\t\teditCard={editCard}\n\t\t\t\t\t\t\tremoveCard={removeCard} \n\t\t\t\t\t\t\tabortController={abortController}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route>\n\t\t\t\t\t\t<NotFound />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Layout;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}